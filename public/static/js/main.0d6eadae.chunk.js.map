{"version":3,"sources":["images/logo-white.png","components/Header/Header.js","components/LaunchItem/LaunchItem.js","components/Launches.js","components/LaunchDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","src","logo","alt","LaunchItem","props","launch","flight_number","mission_name","launch_date_local","launch_success","format","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","launches","map","LAUNCH_QUERY","LaunchDetails","match","params","parseInt","variables","rocket","rocket_id","rocket_name","rocket_type","xmlns","width","height","fill","viewBox","fillRule","d","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,G,MAAA,IAA0B,wC,eCiB1BA,EAZA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKD,UAAU,iBAAiBE,IAAKC,EAAMC,IAAI,uB,yCC6B1CC,G,MAlCI,SAACC,GAClB,MACEA,EAAMC,OADAC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,kBAAmBC,EAAxD,EAAwDA,eAGxD,OACE,sBAAKX,UAAU,oCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,aAAd,SACE,cAAC,IAAD,CAAMC,GAAE,kBAAaO,GAArB,SAAuCC,MAEzC,sBAAMT,UAAU,UAChB,oBAAGA,UAAU,YAAb,yBACe,IACb,cAAC,IAAD,CAAQY,OAAO,mBAAf,SAAmCF,OAErC,sBACEV,UAAS,gBAAWW,EAAiB,aAAe,aADtD,SAGGA,EAAiB,UAAY,cAIlC,qBAAKX,UAAU,2BAAf,SACE,cAAC,IAAD,CACEC,GAAE,kBAAaO,GACfR,UAAU,yBAFZ,iCCxBFa,EAAiBC,YAAH,yKA0BLC,EAfE,WACf,MAAiCC,YAASH,GAAlCI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAExB,OAAIF,EAAgB,2CAChBC,EAAc,yCAGhB,mCACGC,EAAKC,SAASC,KAAI,SAACd,GAClB,OAAO,cAAC,EAAD,CAAuCA,OAAQA,GAA9BA,EAAOC,qBCnBjCc,EAAeR,YAAH,mUA4FHS,EA3EO,SAACjB,GACrB,IAAME,EAAkBF,EAAMkB,MAAMC,OAA9BjB,cACNA,EAAgBkB,SAASlB,GACzB,MAAiCQ,YAASM,EAAc,CACtDK,UAAW,CAAEnB,mBADPS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAIxB,GAAIF,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,yCAElB,MAKIC,EAAKZ,OAJPE,EADF,EACEA,aACAE,EAFF,EAEEA,eACAD,EAHF,EAGEA,kBAHF,IAIEkB,OAAUC,EAJZ,EAIYA,UAAWC,EAJvB,EAIuBA,YAAaC,EAJpC,EAIoCA,YAGpC,OACE,qBAAK/B,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBS,IACtB,sBAAKT,UAAU,uBAAf,UACE,oBAAIA,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,4BAAgDQ,KAChD,qBAAIR,UAAU,kBAAd,yBACe,IACb,cAAC,IAAD,CAAQY,OAAO,aAAf,SAA6BF,OAE/B,qBAAIV,UAAU,kBAAd,0BACe,cAAC,IAAD,CAAQY,OAAO,QAAf,SAAwBF,OAEvC,qBAAIV,UAAU,kBAAd,2BACiB,IACf,sBACEA,UAAS,gBACPW,EAAiB,aAAe,aAFpC,SAKGA,EAAiB,UAAY,oBAMtC,sBAAKX,UAAU,uBAAf,UACE,oBAAIA,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,wBAA4C6B,KAC5C,qBAAI7B,UAAU,kBAAd,0BAA8C8B,KAC9C,qBAAI9B,UAAU,kBAAd,0BAA8C+B,WAIlD,eAAC,IAAD,CAAM9B,GAAG,IAAT,UACE,qBACE+B,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLnC,UAAU,mBACVoC,QAAQ,YANV,SAQE,sBACEC,SAAS,UACTC,EAAE,oJAEC,IAbT,gBCnEFC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,MAqBEC,MAlBf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBN,OAAQA,EAAxB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,sBAAKvC,UAAU,YAAf,UACE,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjC,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAK,yBACLC,UAAWzB,aCZR0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d6eadae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.67ac7494.png\";","import React from 'react';\nimport logo from '../../images/logo-white.png';\nimport { Link } from 'react-router-dom';\nimport './header.scss';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <Link to=\"/\">\n          <img className=\"logo img-fluid\" src={logo} alt=\"SpaceX Logo\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport './launch-item.scss';\n\nconst LaunchItem = (props) => {\n  const { flight_number, mission_name, launch_date_local, launch_success } =\n    props.launch;\n\n  return (\n    <div className=\"card card--results card-body mb-3\">\n      <div className=\"wrapper\">\n        <h4 className=\"title my-1\">\n          <Link to={`/launch/${flight_number}`}>{mission_name}</Link>\n        </h4>\n        <span className=\"badge\"></span>\n        <p className=\"date my-0\">\n          Launch Date:{' '}\n          <Moment format=\"MM-DD-YYYY HH:mm\">{launch_date_local}</Moment>\n        </p>\n        <span\n          className={`badge ${launch_success ? 'bg-success' : 'bg-danger'}`}\n        >\n          {launch_success ? 'Success' : 'Failed'}\n        </span>\n      </div>\n\n      <div className=\"wrapper wrapper--actions\">\n        <Link\n          to={`/launch/${flight_number}`}\n          className=\"btn btn-sm btn-primary\"\n        >\n          View Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchItem;\n","import React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport LaunchItem from './LaunchItem/LaunchItem';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Launches = () => {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <>\n      {data.launches.map((launch) => {\n        return <LaunchItem key={launch.flight_number} launch={launch} />;\n      })}\n    </>\n  );\n};\n\nexport default Launches;\n","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nconst LaunchDetails = (props) => {\n  let { flight_number } = props.match.params;\n  flight_number = parseInt(flight_number);\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const {\n    mission_name,\n    launch_success,\n    launch_date_local,\n    rocket: { rocket_id, rocket_name, rocket_type },\n  } = data.launch;\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8\">\n        <h1 className=\"my-4\">{mission_name}</h1>\n        <div className=\"section-details mb-5\">\n          <h5 className=\"mb-3\">Launch Details</h5>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n            <li className=\"list-group-item\">\n              Launch Date:{' '}\n              <Moment format=\"MM-DD-YYYY\">{launch_date_local}</Moment>\n            </li>\n            <li className=\"list-group-item\">\n              Launch Time: <Moment format=\"HH:mm\">{launch_date_local}</Moment>\n            </li>\n            <li className=\"list-group-item\">\n              Launch Status:{' '}\n              <span\n                className={`badge ${\n                  launch_success ? 'bg-success' : 'bg-danger'\n                }`}\n              >\n                {launch_success ? 'Success' : 'Failed'}\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"section-details mb-5\">\n          <h5 className=\"mb-3\">Rocket Details</h5>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n            <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n            <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n          </ul>\n        </div>\n\n        <Link to=\"/\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-arrow-left\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n            />\n          </svg>{' '}\n          Back\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchDetails;\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Launches from './components/Launches';\nimport LaunchDetails from './components/LaunchDetails';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n        <div className=\"container\">\n          <Route exact path=\"/\" component={Launches} />\n          <Route\n            exact\n            path=\"/launch/:flight_number\"\n            component={LaunchDetails}\n          />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}